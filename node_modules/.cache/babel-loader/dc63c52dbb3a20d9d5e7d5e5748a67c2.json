{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{userReducer}from\"../reducer/userReducer\";import{forgotpasswordReducer}from\"../reducer/forgotpasswordReducer\";import{resetpasswordReducer}from\"../reducer/resetpasswordReducer\";import{loginReducer}from\"../reducer/loginReducer\";import{urlReducer}from\"../reducer/urlReducer\";var middleware=[thunk];var reducer=combineReducers({user:userReducer,token:forgotpasswordReducer,resetPassword:resetpasswordReducer,login:loginReducer,url:urlReducer});var userAuthFromStorage=localStorage.getItem('userAuthData')?JSON.parse(localStorage.getItem('userAuthData')):null;var initialState={login:{userLogin:userAuthFromStorage}};var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["D:/React/urlshortner/urlshortner/src/redux/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userReducer","forgotpasswordReducer","resetpasswordReducer","loginReducer","urlReducer","middleware","reducer","user","token","resetPassword","login","url","userAuthFromStorage","localStorage","getItem","JSON","parse","initialState","userLogin","store"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA6D,OAA7D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,mBAAR,KAAkC,0BAAlC,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,qBAAT,KAAsC,kCAAtC,CACA,OAASC,oBAAT,KAAqC,iCAArC,CACA,OAASC,YAAT,KAA6B,yBAA7B,CACA,OAASC,UAAT,KAA2B,uBAA3B,CAIA,GAAMC,CAAAA,UAAU,CAAG,CAACP,KAAD,CAAnB,CAIA,GAAMQ,CAAAA,OAAO,CAAGV,eAAe,CAAC,CAC9BW,IAAI,CAAEP,WADwB,CAE9BQ,KAAK,CAAEP,qBAFuB,CAG9BQ,aAAa,CAAEP,oBAHe,CAI9BQ,KAAK,CAAEP,YAJuB,CAK9BQ,GAAG,CAAEP,UALyB,CAAD,CAA/B,CAQA,GAAMQ,CAAAA,mBAAmB,CAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADwB,CAExB,IAFJ,CAIA,GAAMG,CAAAA,YAAY,CAAG,CACnBP,KAAK,CAAE,CAAEQ,SAAS,CAAEN,mBAAb,CADY,CAArB,CAIA,GAAMO,CAAAA,KAAK,CAAGxB,WAAW,CACrBW,OADqB,CAErBW,YAFqB,CAGrBlB,mBAAmB,CAACF,eAAe,MAAf,QAAmBQ,UAAnB,CAAD,CAHE,CAAzB,CAOA,cAAec,CAAAA,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { userReducer } from \"../reducer/userReducer\";\r\nimport { forgotpasswordReducer } from \"../reducer/forgotpasswordReducer\";\r\nimport { resetpasswordReducer } from \"../reducer/resetpasswordReducer\";\r\nimport { loginReducer } from \"../reducer/loginReducer\";\r\nimport { urlReducer } from \"../reducer/urlReducer\";\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  token: forgotpasswordReducer, \r\n  resetPassword: resetpasswordReducer,\r\n  login: loginReducer,\r\n  url: urlReducer\r\n})\r\n\r\nconst userAuthFromStorage = localStorage.getItem('userAuthData')\r\n  ? JSON.parse(localStorage.getItem('userAuthData'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  login: { userLogin: userAuthFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,   \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}