{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userReducer } from \"../reducer/userReducer\";\nimport { forgotpasswordReducer } from \"../reducer/forgotpasswordReducer\";\nimport { resetpasswordReducer } from \"../reducer/resetpasswordReducer\";\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  user: userReducer,\n  token: forgotpasswordReducer,\n  resetPassword: resetpasswordReducer\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/React/urlshortner/urlshortner/src/redux/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userReducer","forgotpasswordReducer","resetpasswordReducer","middleware","reducer","user","token","resetPassword","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AAIA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAIA,MAAMM,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,IAAI,EAAEL,WADwB;AAE9BM,EAAAA,KAAK,EAAEL,qBAFuB;AAG9BM,EAAAA,aAAa,EAAEL;AAHe,CAAD,CAA/B;AAMA,MAAMM,KAAK,GAAGb,WAAW,CACrBS,OADqB,EAErBL,mBAAmB,CAACF,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAFE,CAAzB;AAMA,eAAeK,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { userReducer } from \"../reducer/userReducer\";\r\nimport { forgotpasswordReducer } from \"../reducer/forgotpasswordReducer\";\r\nimport { resetpasswordReducer } from \"../reducer/resetpasswordReducer\";\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  token: forgotpasswordReducer, \r\n  resetPassword: resetpasswordReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,   \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}