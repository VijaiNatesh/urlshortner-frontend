{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userReducer } from \"../reducer/userReducer\";\nimport { forgotpasswordReducer } from \"../reducer/forgotpasswordReducer\";\nimport { resetpasswordReducer } from \"../reducer/resetpasswordReducer\";\nimport { loginReducer } from \"../reducer/loginReducer\";\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  user: userReducer,\n  token: forgotpasswordReducer,\n  resetPassword: resetpasswordReducer,\n  login: loginReducer\n});\nconst userAuthFromStorage = localStorage.getItem('userAuthData') ? JSON.parse(localStorage.getItem('userAuthData')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userAuthFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/React/urlshortner/urlshortner/src/redux/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userReducer","forgotpasswordReducer","resetpasswordReducer","loginReducer","middleware","reducer","user","token","resetPassword","login","userAuthFromStorage","localStorage","getItem","JSON","parse","initialState","userLogin","userInfo","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAIA,MAAMC,UAAU,GAAG,CAACN,KAAD,CAAnB;AAIA,MAAMO,OAAO,GAAGT,eAAe,CAAC;AAC9BU,EAAAA,IAAI,EAAEN,WADwB;AAE9BO,EAAAA,KAAK,EAAEN,qBAFuB;AAG9BO,EAAAA,aAAa,EAAEN,oBAHe;AAI9BO,EAAAA,KAAK,EAAEN;AAJuB,CAAD,CAA/B;AAOA,MAAMO,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEP;AAAZ;AADQ,CAArB;AAIA,MAAMQ,KAAK,GAAGvB,WAAW,CACrBU,OADqB,EAErBU,YAFqB,EAGrBhB,mBAAmB,CAACF,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAHE,CAAzB;AAOA,eAAec,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { userReducer } from \"../reducer/userReducer\";\r\nimport { forgotpasswordReducer } from \"../reducer/forgotpasswordReducer\";\r\nimport { resetpasswordReducer } from \"../reducer/resetpasswordReducer\";\r\nimport { loginReducer } from \"../reducer/loginReducer\";\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  token: forgotpasswordReducer, \r\n  resetPassword: resetpasswordReducer,\r\n  login: loginReducer\r\n})\r\n\r\nconst userAuthFromStorage = localStorage.getItem('userAuthData')\r\n  ? JSON.parse(localStorage.getItem('userAuthData'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userAuthFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,   \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}